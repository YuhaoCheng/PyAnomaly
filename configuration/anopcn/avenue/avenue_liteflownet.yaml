SYSTEM:
  multigpus: false
  num_gpus: 2
  gpus: [0,1]
  cudnn:
    benchmark: false
    deterministic: true
    enable: true
  distributed:
    use: false
  
DATASET:
  name: 'Avenue'
  seed: 2020
  read_format: 'opencv'
  channel_num: 3
  channel_name: 'rgb'
  train:
    data_path: './data/Avenue/training/frames'
    clip_length: 5
    train_sampled_clip_length: 5
    train_frame_step: 1
    train_clip_step: 1
    gt_path: './data/Avenue'
  val:
    data_path: './data/Avenue/testing/frames'
    clip_length: 5
    sampled_clip_length: 5
    frame_step: 1
    clip_step: 1
    gt_path: './data/Avenue'
  number_of_class: 1
  score_normalize: true
  score_type: 'normal'
  decidable_idx: 4
  decidable_idx_back: 0
  smooth:
    guassian: true
    guassian_sigma: [3,5,15,10,20,30]
  mini_dataset:
    samples: 100
  evaluate_function:
    name: 'ScoreAUCMetrics'
    result_type: 'score'
ARGUMENT:
  train:
    use: true
    resize:
      use: true
      height: 256
      width: 256
    grayscale:
      use: false
    normal:
      use: true
      mean: [0.5, 0.5, 0.5]
      std: [0.5, 0.5, 0.5]
    fliplr:
      use: false
      p: 0.5
    flipud:
      use: false
      p: 0.5
    rote:
      use: false
      degrees: [10,10]
    JpegCompression:
      use: false
      high: 100
      low: 80
    GaussianBlur:
      use: false
      high: 0.3
      low: 0.03
    CropToFixedSize:
      use: false
      height: 256
      width: 256
      position: 'center'
  val:
    use: true
    resize:
      use: true
      height: 256
      width: 256
    grayscale:
      use: false
    normal:
      use: true
      mean: [0.5, 0.5, 0.5]
      std: [0.5, 0.5, 0.5]

MODEL:
  name: 'anopcn'
  type: 'ame2e'
  parts: ['meta_AnoPcn', 'G', 'meta_PixelDiscriminator', 'D', 'auxiliary_LiteFlowNet', 'F']
  hooks:
    train: ['AnoPCNEvaluateHook', 'VisScoreHook']
    val: ['AnoPCNEvaluateHook']
  discriminator_channels: [128,256,512,512]
  optical_flow:
    name: 'liteflownet'
    model_path: './pretrained_model/liteflownet/network-sintel.pytorch'

TRAIN:
  engine_name: 'ANOPCNTrainer'
  batch_size: 32
  start_step: 0
  max_steps: 20000
  log_step: 5
  vis_step: 1000
  mini_eval_step: 500
  eval_step: 2000
  save_step: 5000
  epochs: 1
  losses: ['loss_GANLoss_cuda', 0.25, 'GANLoss', [['gan_mode', 'lsgan']], 'loss_GradientLoss_cuda', 1.0, 'GradientLoss', [], 
           'loss_IntentsityLoss_cuda', 1.0, 'IntensityLoss', [], 'loss_OpticalflowSqrtLoss_cuda', 2.0, 'L2Loss', []]
  mode: 'adversarial'
  adversarial:
    optimizer:
      include: ['Generator', 'Discriminator']
      name: 'adam'
      lrs: [0.0002, 0.00002] 
      weight_decay: 0.0001
    scheduler:
      use: true
      name: 'WarmupCosLR'
      step_size: 1000
      steps: [10000, 15000]
      gamma: 0.1
      T_max: 300
      eta_min: 0
      warmup_factor: 0.001
      warmup_iters: 1000
      warmup_method: 'linear'
  model_output: './output/models'
  checkpoint_output: './output/checkpoint'

VAL:
  engine_name: 'ANOPCNInference'
  name: ''
  path: ''
  batch_size: 2
  result_output: './output/results'

