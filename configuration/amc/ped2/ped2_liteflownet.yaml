SYSTEM:
  gpus: [0,1]
  cudnn:
    benchmark: false
    deterministic: true
    enable: true
  
DATASET:
  name: 'Ped2'
  seed: 2020
  read_format: 'opencv'
  image_format: 'tif'
  channel_num: 3
  channel_name: 'rgb'
  optical_format: 'Y'
  train:
    train_path: './data/ped2_tif/training/frames'
    train_clip_length: 2
    train_sampled_clip_length: 2
    train_frame_step: 1
    train_clip_step: 1
    gt_path: './data/ped2_tif'
  val:
    test_path: './data/ped2_tif/testing/frames'
    test_clip_length: 2
    test_sampled_clip_length: 2
    test_frame_step: 1
    test_clip_step: 1
    gt_path: './data/ped2_tif'
  number_of_class: 1
  score_normalize: false
  score_type: 'abnormal'
  decidable_idx: 1
  decidable_idx_back: 1
  smooth:
    guassian: true
    guassian_sigma: [3,5,15,10,20,30]
  mini_dataset:
    samples: 100
  evaluate_function:
    name: 'ScoreAUCMetrics'
    result_type: 'score'
  
ARGUMENT:
  train:
    use: true
    resize:
      use: true
      height: 128
      width: 192
    grayscale:
      use: false
    normal:
      use: true
      mean: [0.5, 0.5, 0.5]
      std: [0.5, 0.5, 0.5]
    fliplr:
      use: false
      p: 0.5
    flipud:
      use: false
      p: 0.5
    rote:
      use: false
      degrees: [10,10]
    JpegCompression:
      use: false
      high: 100
      low: 80
    GaussianBlur:
      use: false
      high: 0.3
      low: 0.03
    CropToFixedSize:
      use: false
      height: 256
      width: 256
      position: 'center'
  val:
    use: true
    resize:
      use: true
      height: 128
      width: 192
    grayscale:
      use: false
    normal:
      use: true
      mean: [0.5, 0.5, 0.5]
      std: [0.5, 0.5, 0.5]

MODEL:
  name: 'amc'
  type: 'ame2e'
  parts: ['meta_G', 'AMCGenerator', 'meta_D', 'AMCDiscriminiator', 'auxiliary_F', 'LiteFlowNet']
  hooks:
    train: ['AMCEvaluateHook', 'VisScoreHook']
    val: ['AMCEvaluateHook']
  auxiliary:
    optical_flow:
      name: 'liteflownet'
      model_path: './pretrained_model/liteflownet/network-sintel.pytorch'

TRAIN:
  engine_name: 'AMCTrainer'
  batch_size: 16
  start_step: 0
  max_steps: 6400
  log_step: 5
  vis_step: 160
  eval_step: 160
  save_step: 160
  losses: ['loss_GANLoss_cuda', 0.25, 'GANLoss', [['gan_mode', 'vanilla'], ['target_real_label', 1.0], ['target_fake_label', 0.0]], 'loss_GradientLoss_cuda', 1.0, 'GradientLoss', [], 
           'loss_IntentsityLoss_cuda', 1.0, 'IntensityLoss', [], 'loss_OpticalflowSqrtLoss_cuda', 2.0, 'L2Loss', []]
  mode: 'adversarial'
  adversarial:
    optimizer:
      include: ['G', 'D']
      name: 'adam'
      lrs: [0.0002, 0.00002]
      betas: [0.5, 0.9]
      weight_decay: 0.0001
    scheduler:
      use: false
      name: 'stepLR'
      step_size: 320
      steps: [400, 800]
      gamma: 0.1
      T_max: 1200
      eta_min: 0
      warmup_factor: 0.001
      warmup_iters: 1000
      warmup_method: 'linear'

VAL:
  engine_name: 'AMCInference'

