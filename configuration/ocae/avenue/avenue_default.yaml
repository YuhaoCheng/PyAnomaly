SYSTEM:
  # multigpus: false
  # num_gpus: 2
  gpus: [0,1]
  cudnn:
    benchmark: true
    deterministic: false
    enable: true
  distributed:
    use: false
LOG:
  log_output_dir: './output/log'
  tb_output_dir: './output/tensorboard'
  vis_dir: './output/vis'
  
DATASET:
  name: 'Avenue'
  seed: 2020
  read_format: 'opencv'
  train:
    data_path: './data/avenue/training/frames'
    clip_length: 7
    sampled_clip_length: 3
    frame_step: 3
    clip_step: 1
    execute_test: false
    gt_path: './data/Avenue'
  val:
    data_path: './data/avenue/testing/frames'
    clip_length: 7
    sampled_clip_length: 3
    frame_step: 3
    clip_step: 1
    gt_path: './data/Avenue'
  number_of_class: 1
  score_normalize: true
  score_type: 'abnormal'
  decidable_idx: 4
  decidable_idx_back: 0
  smooth:
    guassian: true
    guassian_sigma: [3,5,15,10,20,30]
  mini_dataset:
    samples: 100
  evaluate_function:
    name: 'ScoreAUCMetrics'
    result_type: 'score'
AUGMENT:
  train:
    use: true
    resize:
      use: true
      height: 256
      width: 256
    grayscale:
      use: false
    normal:
      use: true
      mean: []
      std: []
    fliplr:
      use: true
      p: 0.5
    flipud:
      use: true
      p: 0.5
    rote:
      use: false
      degrees: [10,10]
    JpegCompression:
      use: false
      high: 100
      low: 80
    GaussianBlur:
      use: false
      high: 0.3
      low: 0.03
    CropToFixedSize:
      use: false
      height: 256
      width: 256
      position: 'center'
  val:
    use: true
    resize:
      use: true
      height: 256
      width: 256
    grayscale:
      use: false
    normal:
      use: true
      mean: []
      std: []

MODEL:
  name: 'ocae'
  type: 'ame2e'
  parts: ['meta_A', 'CAE', 'meta_B', 'CAE', 'meta_C', 'CAE']
  hooks:
    train: ['ClusterHook', 'OCEvaluateHook', 'VisScoreHook']
    val: ['OCEvaluateHook']
  auxiliary:
    detector:
      name: 'detectron2'
      config: 'COCO-Detection/faster_rcnn_X_101_32x8d_FPN_3x.yaml'
      model_path: "./pretrained_model/faster_rcnn_X_101_FPN_model_final_68b088.pkl"
TRAIN:
  engine_name: 'OCAETrainer'
  batch_size: 16
  start_step: 0
  max_steps: 38320
  log_step: 5
  vis_step: 958
  mini_eval_step: 600
  eval_step: 958
  save_step: 958
  epochs: 1
  losses: ['loss_ALoss_cuda', 1, 'IntensityLoss', [], 'loss_Bloss_cuda', 2, 'IntensityLoss', [],
        'loss_Closs_cuda', 1, 'IntensityLoss',[]]
  mode: 'general'
  general:
    optimizer:
      include: ['A', 'B', 'C']
      name: 'adam'
      lrs: [1e-3]
      momentum: 0.9
      weight_decay: 0.0001
      nesterov: false
    scheduler:
      use: true
      name: 'MultiStepLR'
      step_size: 1000
      steps: [63800]
      gamma: 0.1
      T_max: 300
      eta_min: 0
      warmup_factor: 0.001
      warmup_iters: 1000
      warmup_method: 'linear'
  # split: ''
  model_output: './output/models'
  checkpoint_output: './output/checkpoint'
  pusedo_data_path: ''
  cluster:
    k: 10
VAL:
  engine_name: 'OCAEInference'
  # name: ''
  path: ''
  batch_size: 2
  result_output: './output/results'
  

